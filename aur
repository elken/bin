#!/bin/sh
AUR_DIR=

colorR="\e[38;5;1m"
colorG="\e[38;5;2m"
colorY="\e[38;5;3m"
colorB="\e[38;5;4m"
colorM="\e[38;5;5m"
colorC="\e[38;5;6m"
colorW="\e[38;5;7m"
reset="\e[0m"

proceed() {
    Y="`gettext pacman Y`"; y="$(echo $Y | tr '[:upper:]' '[:lower:]')";
    N="`gettext pacman N`"; n="$(echo $N | tr '[:upper:]' '[:lower:]')"
    case "$1" in
        y)  printf "${colorB}%s${reset} ${colorW}%s${reset}" $"$2 [Y/n] "
            read -n 1 answer
            echo
            case $answer in
                $Y|$y|'') return 0;;
                *) return 1;;
            esac;;
        n)  printf "${colorB}%s${reset} ${colorW}%s${reset}" $"$2 [y/N] "
            read -n 1 answer
            echo
            case $answer in
                $N|$n|'') return 0;;
                *) return 1;;
            esac;;
    esac
}

show_version()
{
    printf "Bugs-a-plenty edition.\nShout at me: elken@member.fsf.org\n"
    exit 0
}

error_msg() {
    printf "${colorR}Error: ${colorW}%s${reset}\n" "${1}"
    exit 1
}


show_help()
{
    printf "${colorW}Various AUR-git stuff
    \nOptions:
    -h\t\t\tShow this help
    -v\t\t\tShow current version
    -c\t\t\tShow the available colors
    -n <pkg-name>\tCreate a new repo
    -d <directory>\tLocation for new repo (default: ${AUR_DIR})${reset}\n"
}

new_repo()
{
    if [[ -e "${AUR_DIR}/$1" ]]; then
        error_msg "${1} exists."
    fi

    if [ $(which git) = "" ]; then
        error_msg "Git not installed."
    fi

    if [ "${AUR_DIR}" = "" ]; then
        error_msg "Directory not specified."
    fi
}

main()
{
    if [ "$#" -eq 0 ]; then
        printf "${colorR}Ran with no arguments.${reset}\n"
        show_help
        exit 1
    else
        local OPTIND=1
        while getopts hd:vcn: opt; do
            case $opt in
                h)
                    show_help
                    ;;
                d)
                    AUR_DIR=$OPTARG
                    ;;
                v)
                    show_version
                    ;;
                c)
                    show_colors
                    ;;
                n)
                    new_repo $OPTARG        
                    ;;
            esac
        done

        shift $((OPTIND - 1))
    fi
}

main "$@"
